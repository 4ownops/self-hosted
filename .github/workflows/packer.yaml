name: Create VM template

on:
  workflow_dispatch:
    inputs:
      pipeline_path:
        description: 'VM pipeline (see in packer directory)'
        required: true
        type: choice
        options:
          - basic-debian-12.1.0-amd64-netinst
          - k3s-debian-12.1.0-amd64-netinst

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      vm_id: ${{ steps.setvars.outputs.vm_id }}
    steps:
      - name: Set variables
        id: setvars
        run: |
          if [[ "${{ inputs.pipeline_path }}" == "k3s"* ]]; then
            echo "vm_id=103" >> $GITHUB_OUTPUT
            echo "k3s is found. vm_id=103"
          fi

          if [[ "${{ inputs.pipeline_path }}" == "basic"* ]]; then
            echo "vm_id=102" >> $GITHUB_OUTPUT
            echo "basic is found. vm_id=102"
          fi
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up WireGuard
        run: chmod +x scripts/wg_setup.sh && scripts/wg_setup.sh
        env:
          ARG_ENDPOINT: ${{ secrets.WG_ENDPOINT }}
          ARG_ENDPOINT_PUBLIC_KEY: ${{ secrets.WG_PUBKEY }}
          ARG_ASSIGNED_IP: 192.168.0.5
          ARG_ALLOWED_IPS: 192.168.0.0/24
          ARG_PRIVATE_KEY: ${{ secrets.WG_PRIVATE_KEY }}
          ARG_PRESHARED_KEY: ${{ secrets.WG_PRESHARED_KEY }}
          ARG_KEEPALIVE: 25
      - name: Packer run
        env:
          PROXMOX_URL: ${{ vars.PROXMOX_URL }}
          PROXMOX_USER: ${{ secrets.PROXMOX_API_USER }}
          PROXMOX_PASSWORD: ${{ secrets.PROXMOX_API_PASSWORD }}
        run: | 
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo sudo apt-get install packer
          cd scripts
          pip install -r requirements.txt
          VM_ID=${{ needs.init.outputs.vm_id }}
          echo "VM_ID = $VM_ID"
          chmod +x pxmx_delete_vm.py && python pxmx_delete_vm.py -vm_id $VM_ID
          cd ../packer/${{ inputs.pipeline_path }}
          sed -i "s/\${proxmox_api_user}/$PROXMOX_USER/g" variables.auto.pkrvars.hcl
          sed -i "s/\${proxmox_api_password}/$PROXMOX_PASSWORD/g" variables.auto.pkrvars.hcl
          sed -i "s/\${ansible_user_public_key}/${{ secrets.ANSIBLE_USER_PUBLIC_KEY }}/g" preseed.cfg
          packer init ./debian.pkr.hcl
          packer build .
