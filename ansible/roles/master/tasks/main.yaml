- name: copy cleanup service file
  become: true
  ansible.builtin.copy:
   src: files/k3s-cleanup.service
   dest: /lib/systemd/system/k3s-cleanup.service

- name: create k3s config.yaml
  become: true
  ansible.builtin.template:
   src: templates/config.yaml.j2
   dest: /etc/rancher/k3s.config.d/config.yaml

- name: Install python
  become: true
  ansible.builtin.apt:
    update_cache: true
    pkg: 
      - python3
      - python3-pip
      - awscli
    state: present

- name: Install boto3
  environment:
    PIP_BREAK_SYSTEM_PACKAGES: "1"
  ansible.builtin.pip:
    name:
      - boto3
      - botocore

- name: install k3s
  become: true
  run_once: true
  ansible.builtin.shell:
    cmd: kubectl get nodes -o custom-columns="CONTROL-PLANE:metadata.labels.node-role\.kubernetes\.io/control-plane" | grep true || wget -qO - https://get.k3s.io | INSTALL_K3S_VERSION="v1.28.3+k3s1" sh -s - server

- name: slurp token
  become: true
  ansible.builtin.slurp:
    src: /var/lib/rancher/k3s/server/token
  register: token

- name: AWS Create\update k3s token parameter
  environment:
    AWS_ACCESS_KEY_ID: "{{ ANSIBLE_AWS_ACCESS_KEY }}"
    AWS_SECRET_ACCESS_KEY: "{{ ANSIBLE_AWS_SECRET_KEY }}"
    AWS_DEFAULT_REGION: "eu-central-1"
  community.aws.ssm_parameter:
    name: "/self_hosted/k3s_token"
    description: "token for k3s"
    region: eu-central-1 
    string_type: "SecureString"
    value: "{{ token['content'] | b64decode }}"
