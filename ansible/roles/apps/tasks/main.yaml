- name: Get domain
  environment:
    AWS_ACCESS_KEY_ID: "{{ ANSIBLE_AWS_ACCESS_KEY }}"
    AWS_SECRET_ACCESS_KEY: "{{ ANSIBLE_AWS_SECRET_KEY }}"
    AWS_DEFAULT_REGION: "eu-central-1"
  set_fact:
    external_domain: "{{ lookup('amazon.aws.aws_ssm', '/self_hosted/external_domain_name') }}"

- name: Copy apps
  ansible.builtin.copy:
    src: kustomization/
    dest: kustomization

- name: Set up resources
  ansible.builtin.template:
    src: "templates/{{ item.app }}_{{ item.resource_name }}.yaml.j2"
    dest: "kustomization/{{ item.app }}/resources/{{ item.resource_name }}.yaml"
  loop:
   - { app: argocd, resource_name: ingress }
   - { app: argocd, resource_name: cert }
   - { app: cert_manager, resource_name: cluster_issuer_letsencrypt }

- name: Install metrics-server
  ansible.builtin.shell: kubectl apply -k kustomization/metrics_server
  args:
    executable: /bin/bash

- name: Install purelb
  ansible.builtin.shell: kubectl apply -k kustomization/purelb --validate=false
  args:
    executable: /bin/bash

- name: Install reflector
  ansible.builtin.shell: kubectl apply -k kustomization/reflector
  args:
    executable: /bin/bash

- name: Install cert-manager
  ansible.builtin.shell: kubectl apply -k kustomization/cert_manager
  args:
    executable: /bin/bash

- name: Traefik options
  ansible.builtin.shell: kubectl apply -k kustomization/traefik
  args:
    executable: /bin/bash
#- name: Install metrics-server
#  k8s:
#    definition: "{{ lookup('kubernetes.core.kustomize', dir='roles/apps/kustomization/metrics_server') }}"#

#- name: Install purelb
#  k8s:
#    definition: "{{ lookup('kubernetes.core.kustomize', dir='roles/apps/kustomization/purelb') }}"#

#- name: Install reflector
#  k8s:
#    definition: "{{ lookup('kubernetes.core.kustomize', dir='roles/apps/kustomization/reflector') }}"#

#- name: Install cert manager
#  k8s:
#    definition: "{{ lookup('kubernetes.core.kustomize', dir='roles/apps/kustomization/cert_manager') }}"#

- name: Install argocd
  ansible.builtin.shell: kubectl apply -k kustomization/argocd
  args:
    executable: /bin/bash
#- name: Install argocd
#  k8s:
#    definition: "{{ lookup('kubernetes.core.kustomize', dir='roles/apps/kustomization/argocd') }}"
